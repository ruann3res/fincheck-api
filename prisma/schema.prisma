generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Enums
enum BankAccountTypeEnum {
    CHECKING
    INVESTMENT
    CASH

    @@map("bank_account_type_enum")
}

enum TransectionTypeEnum {
    INCOME
    EXPENSE

    @@map("transection_type_enum")
}

// Models
model User {
    id       String @id @default(uuid()) @db.Uuid
    email    String @unique
    name     String
    password String

    bankAccounts BankAccount[]
    categories   Category[]
    transections Transection[]

    @@map("users")
}

model BankAccount {
    id             String              @id @default(uuid()) @db.Uuid
    userId         String              @map("user_id") @db.Uuid
    name           String
    initialBalance Float               @map("initial_balance")
    color          String
    type           BankAccountTypeEnum
    user           User                @relation(fields: [userId], references: [id], onDelete: Cascade)
    transections   Transection[]

    @@map("bank_accounts")
}

model Category {
    id           String              @id @default(uuid()) @db.Uuid
    userId       String              @map("user_id") @db.Uuid
    user         User                @relation(fields: [userId], references: [id], onDelete: Cascade)
    name         String
    icon         String
    type         TransectionTypeEnum
    transections Transection[]

    @@map("categories")
}

model Transection {
    id            String              @id @default(uuid()) @db.Uuid
    userId        String              @map("user_id") @db.Uuid
    bankAccountId String              @map("bank_account_id") @db.Uuid
    categoryId    String?             @map("category_id") @db.Uuid
    name          String
    value         String
    date          DateTime
    type          TransectionTypeEnum
    user          User                @relation(fields: [userId], references: [id], onDelete: Cascade)
    bankAccount   BankAccount         @relation(fields: [bankAccountId], references: [id], onDelete: Cascade)
    category      Category?           @relation(fields: [categoryId], references: [id], onDelete: SetNull)

    @@map("transections")
}
